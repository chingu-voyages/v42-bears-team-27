/* eslint-disable react/destructuring-assignment */
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useState, useContext, useEffect } from 'react';
import type { ThemeUIStyleObject } from 'theme-ui';
import {
  MdOutlineInbox,
  MdOutlineAccountCircle,
  MdOutlineSettings,
} from 'react-icons/md';

import { AuthContext } from '../store/auth';

type Props = {
  children: React.ReactNode;
  title: string;
  description?: string;
};

const iconBtnStyles: ThemeUIStyleObject = {
  width: 32,
  height: 32,
  bg: 'transparent',
  border: 'none',
  cursor: 'pointer',
};

export const AuthHeader: React.FC = () => (
  <header
    sx={{
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'space-between',
      py: 3,
      px: 4,
      bg: '#f4f4f2',
    }}
  >
    <h1 sx={{ m: 0 }}>Classroom: Bears Team 27</h1>
    <div sx={{ display: 'flex', columnGap: 3 }}>
      <button sx={iconBtnStyles} type="button">
        <MdOutlineInbox size="inherit" />
      </button>
      <button sx={iconBtnStyles} type="button">
        <MdOutlineAccountCircle size="inherit" />
      </button>
      <button sx={iconBtnStyles} type="button">
        <MdOutlineSettings size="inherit" />
      </button>
    </div>
  </header>
);

export const AuthLayout: React.FC<Props> = ({
  children,
  title,
  description,
}) => {
  const router = useRouter();
  const authCtx = useContext(AuthContext);
  const [isMounted, setIsMounted] = useState(false);

  useEffect(() => {
    if (!authCtx?.isLoggedIn) {
      router.replace('/');
    } else {
      setIsMounted(true);
    }
  }, [authCtx?.isLoggedIn, router]);

  if (!isMounted) {
    return <p>Loading...</p>;
  }

  return (
    <>
      <Head>
        <title>{title}</title>
        <meta
          name="description"
          content={description || 'Generated by create next app'}
        />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {children}
    </>
  );
};
